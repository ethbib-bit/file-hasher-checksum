#!/usr/bin/perl
###
# Repository: https://bitbucket.org/ethbib_bit/file-hasher-checksum
# Autor: Lars HÃ¤ndler
#
# Compares .md5 file generated by 'MD5 File Hasher' with actual files
# and their md5 sums on a file file system
# .md5 file has to be in the directroy that is supplied as argument
###
use strict;
use warnings;

$|=1;

#get path with files and .md5
my $mp5_path = $ARGV[0];

#check if parameter has been supplied
if (not defined $mp5_path) {
  die "input path needed\n";
}

#indirect way to check if supplied path exists
chdir($mp5_path) or die "cannot change to directory: $mp5_path\n\n";

#open directory supplied for read out
opendir(DIR, $mp5_path) or die "cannot open directory $mp5_path\n\n";

#put all files in directory, except md5log_ and .md5, into array
my @alldirfiles = grep(!/^md5log_[0-9]+.txt/,grep(!/.md5$/,grep {!/^\./} readdir(DIR)));

#close directory for read out
closedir(DIR) or die "cannot close directory $mp5_path\n\n";

#create md5 log file
my $md5log_file = "md5log_".time().".txt";

#open log file for writing
open (LOGDATEI, '>', $md5log_file) or die $!;

#readout all .md5 files
my @fileliste = <$mp5_path/*.md5>;
my $filename = "";
#iterate over each .md5 file / ideally only one file
foreach $filename (@fileliste) {

  #logs .md5 file iterated over
  print LOGDATEI $filename." md5 file found\n\n";

  #iterate over all line in .md5 file
  open(my $data, '<', $filename) or die "Could not open '$filename' $!\n";
  while (my $line = <$data>) {

  #clean up each line and split into array
  chomp $line;
  my @fields = split " " , $line;

  #has 2 sections, must be a valid md5 and file combination
  if (@fields == 2) {
  my $md5sum = uc $fields[0]; #md5 sum
  my $file = $fields[1]; #file for that md5 sum

  #check md5 sum structure, should have better checking
  if ($md5sum =~ /^[0-9A-Z]+$/) {
    #checks if file actually exists
    if (-e $file) {
    # remove md5 file from files found in directory
    my $numalldirfiles = @alldirfiles;
    for ( my $inx = 0; $inx < $numalldirfiles; $inx++ ) {
      if ($file eq $alldirfiles[$inx]) {
       splice(@alldirfiles,$inx,1);
       last;
      }
    }

    #temp vars for actual md5sum check on file system
    my (@linesArray, $line);
    #build command
    my $cmd='md5sum '.$file;

    #run command and get output
    open(CMD, "$cmd |");
    @linesArray = <CMD>;
    close(CMD);

    #extract md5sum from output
    my @separate = split " " , $linesArray[0];
    my $md5sum_calc = uc $separate[0];

    #compare md5sum on file system with value in .md5 file
    if ($md5sum_calc eq $md5sum) {
      print LOGDATEI "md5sum of file $file is correct!\n";
    }
    else {
     print LOGDATEI "calculated md5sum of file $file is not correct! given md5sum is $md5sum, the file calculated md5sum is $md5sum_calc\n";
    }
   }
   #if the file in the .md5 file does not exist on the file system
   else {
     print LOGDATEI "specified file ".$file." with specified md5sum ".$md5sum." do not exist on filesystem\n";
   }

   
  } else {
   print LOGDATEI $md5sum." is not a md5 checksum, specified filename in the ".$filename." is ".$file."\n";
  }
 }
}
my $item = "";
my $md5filename=substr($filename,rindex($filename,'/')+1);
print "path=".$mp5_path." ".$md5filename." ".$md5log_file."\n";
foreach $item (@alldirfiles) {
  if ($item ne $md5filename) {
     print LOGDATEI $item." file in directory but not in ".$filename." file!\n";
  }
}

print LOGDATEI "\n\nEND of ".$filename." file\n\n\n";
}

close (LOGDATEI);
